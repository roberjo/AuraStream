name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test'
        required: false
        default: '3.10'
        type: choice
        options:
          - '3.9'
          - '3.10'
          - '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Validate Python version
      run: |
        if [[ "${{ matrix.python-version }}" != "3.9" && "${{ matrix.python-version }}" != "3.10" && "${{ matrix.python-version }}" != "3.11" ]]; then
          echo "Error: Invalid Python version ${{ matrix.python-version }}. Supported versions are 3.9, 3.10, 3.11"
          exit 1
        fi
        echo "Using Python version: ${{ matrix.python-version }}"
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        flake8 src/ tests/
        black --check src/ tests/
        isort --check-only src/ tests/
    
    - name: Run type checking
      run: mypy src/
    
    - name: Run unit tests
      run: pytest tests/unit/ -v --cov=src --cov-report=xml
    
    - name: Run security checks
      run: |
        bandit -r src/
        safety check
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Start LocalStack
      run: |
        docker run -d -p 4566:4566 localstack/localstack
    
    - name: Wait for LocalStack
      run: sleep 30
    
    - name: Run integration tests
      run: pytest tests/integration/ -v
      env:
        AWS_ENDPOINT_URL: http://localhost:4566
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        AWS_DEFAULT_REGION: us-east-1

  build:
    runs-on: ubuntu-latest
    needs: [test, integration-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install AWS SAM CLI
      run: |
        pip install aws-sam-cli
    
    - name: Build application
      run: sam build
    
    - name: Validate template
      run: sam validate

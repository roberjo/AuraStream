name: Terraform Deploy

on:
  push:
    branches: [main, develop]
    paths: ['terraform/**']
  pull_request:
    branches: [main]
    paths: ['terraform/**']

env:
  TF_CLI_ARGS: -no-color

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
    
    - name: Terraform Init
      run: terraform init
      working-directory: terraform
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform
    
    - name: Terraform Plan
      run: terraform plan -var-file="workspaces/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}.tfvars"
      working-directory: terraform
      env:
        TF_CLOUD_ORGANIZATION: aurastream
        TF_WORKSPACE: aurastream-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v8
      with:
        script: |
          const output = `#### Terraform Plan ðŸ“–
          \`\`\`
          ${process.env.TF_PLAN}
          \`\`\`
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      run: terraform init
      working-directory: terraform
    
    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file="workspaces/prod.tfvars"
      working-directory: terraform
      env:
        TF_CLOUD_ORGANIZATION: aurastream
        TF_WORKSPACE: aurastream-prod

  terraform-staging:
    name: Terraform Staging Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      run: terraform init
      working-directory: terraform
    
    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file="workspaces/staging.tfvars"
      working-directory: terraform
      env:
        TF_CLOUD_ORGANIZATION: aurastream
        TF_WORKSPACE: aurastream-staging
